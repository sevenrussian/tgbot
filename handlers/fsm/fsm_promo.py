from database.sqlite_db import *
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram import types, Dispatcher
from create_bot import dp, bot
from aiogram.dispatcher.filters import Text
from keyboards.client_kb import *
from mail.send_email import send_letter_with_attachment
from config import *
from handlers.client_handler import ignore_message_from


class FSMPromo(StatesGroup):
    text = State()
    document = State()


async def promo_send_resume(message: types.Message):
    """
    :param message:
    :return:
    –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—é–º–µ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø—Ä–∏–≤–µ–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –≤ –æ—Ç–¥–µ–ª –∫–∞–¥—Ä–æ
    """

    if not await BotUsersTable.is_user_exists(message.chat.id):
        return
    if await ignore_message_from(message):
        return
    message1 = """üí¨ –•–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –±–æ–Ω—É—Å?

–ü—Ä–æ–≥—Ä–∞–º–º–∞ –ü—Ä–∏–≤–µ–¥–∏ –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ - —ç—Ç–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞, –ø–æ –∫–æ—Ç–æ—Ä–æ–π –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –¥–æ 100 000 —Ä—É–±–ª–µ–π, –ø–æ—Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–≤ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –æ—Ñ–æ—Ä–º–∏—Ç—Å—è –≤ —à—Ç–∞—Ç –∏ –ø—Ä–æ–π–¥–µ—Ç –∏—Å–ø—ã—Ç–∞—Ç–µ–ª—å–Ω—ã–π —Å—Ä–æ–∫(–ò–°).
–ù–∞–º –≤—Å–µ–≥–¥–∞ –Ω—É–∂–Ω—ã —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏, —Ç–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫–∏, –∞–Ω–∞–ª–∏—Ç–∏–∫–∏!
–î–ª—è —É—á–∞—Å—Ç–∏—è –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ä–µ–∑—é–º–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞.
–Ø –æ—Ç–ø—Ä–∞–≤–ª—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –Ω—É–∂–Ω–æ–º—É –æ—Ç–¥–µ–ª—É"""

    message2 = """
üì® –î–æ–∂–¥–∏—Ç–µ—Å—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ—Ç HR –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è –∏ –ø—Ä–∏–µ–º–∞ –≤ –∫–æ–º–ø–∞–Ω–∏—é –≤–∞—à–µ–≥–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞.

–ü–æ–ª—É—á–∏—Ç—å –¥–µ–Ω—å–≥–∏* –º–æ–∂–Ω–æ 2 —á–∞—Å—Ç—è–º–∏:
‚úÖ30% –æ—Ç —Å—É–º–º—ã –±–æ–Ω—É—Å–∞ –ø–æ—Å–ª–µ –∑–∞—á–∏—Å–ª–µ–Ω–∏—è –≤ —à—Ç–∞—Ç –∫–æ–º–ø–∞–Ω–∏–∏ - 1 —á–∞—Å—Ç—å (–≤ —Ç–µ—á–µ–Ω–∏–µ –º–µ—Å—è—Ü–∞);
‚úÖ70% –æ—Ç —Å—É–º–º—ã –±–æ–Ω—É—Å –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏—Å–ø—ã—Ç–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Å—Ä–æ–∫–∞  - 2 —á–∞—Å—Ç—å (–ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏—é 3—Ö –º–µ—Å—è—Ü–µ–≤ —Å –¥–∞—Ç—ã –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω–æ–≥–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞) .

* –†–∞–∑–º–µ—Ä –≤—ã–ø–ª–∞—Ç—ã –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ä–æ–ª–∏, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –∫–∞–Ω–¥–∏–¥–∞—Ç –æ—Ñ–æ—Ä–º–ª—è–µ—Ç—Å—è –∫ –Ω–∞–º –≤ –∫–æ–º–ø–∞–Ω–∏—é. (—Å–º. –°–ª–∞–π–¥)
–¢—ã –º–æ–∂–µ—à—å –ø—Ä–∏–≤–µ—Å—Ç–∏ –ª—é–±–æ–µ —á–∏—Å–ª–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤!

<b>–í–ê–ñ–ù–û!</b>
–û–±—Ä–∞—â–∞–µ–º –í–∞—à–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ –º–æ–∂–µ—Ç –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –ª—é–±–æ–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –≥—Ä—É–ø–ø—ã –∫–æ–º–ø–∞–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–Ω—è—Ç –≤ –ø—Ä–æ–µ–∫—Ç–Ω–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –∫—Ä–æ–º–µ –¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π –≤ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∫–æ—Ç–æ—Ä—ã—Ö –≤—Ö–æ–¥–∏—Ç –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ —Ä–æ—Å—Ç –ø–æ—Ä—Ç—Ñ–µ–ª—è, –∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –ë–∏–∑–Ω–µ—Å-–ø–∞—Ä—Ç–Ω–µ—Ä, –£–ø—Ä–∞–≤–ª—è—é—â–∏–π –ø–∞—Ä—Ç–Ω–µ—Ä –∏ –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –ø–æ—Ä—Ç—Ñ–µ–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤.

–ï—Å–ª–∏ –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã, –Ω–∞–ø–∏—à–∏—Ç–µ –ê–ª–µ–Ω–µ –†–µ–∑–Ω–∏–∫ ( @ic_iteco )"""

    await bot.send_message(message.from_user.id, message1)
    await bot.send_message(message.from_user.id, message2, parse_mode="html")
    promo_file = open(f"{path_to_directory}files_to_send/promo.jpg", 'rb')
    await bot.send_photo(message.from_user.id, promo_file)
    promo_file.close()
    await FSMPromo.text.set()
    message1 = 'üìÑ –£–∫–∞–∂–∏—Ç–µ –¥–æ–ª–∂–Ω–æ—Å—Ç—å, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç–µ —Ä–µ–∑—é–º–µ –∏ –Ω–µ–º–Ω–æ–≥–æ —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —á–µ–ª–æ–≤–µ–∫–µ (–µ–≥–æ –æ–ø—ã—Ç, –Ω–∞–≤—ã–∫–∏ –∏ —Ç.–¥.).'
    await bot.send_message(message.from_user.id, message1, reply_markup=kb_client_promo)


async def cancel_get_document(message: types.Message, state: FSMContext):
    current_state = await state.get_state()
    if current_state is None:
        return
    await state.finish()
    await message.answer('üí¨ –ß–µ–º —è –º–æ–≥—É –≤–∞–º –ø–æ–º–æ—á—å?', reply_markup=kb_client)


async def get_text(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['text'] = message.text
    await FSMPromo.document.set()
    message1 = 'üìÑ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ä–µ–∑—é–º–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ PDF '
    await bot.send_message(message.from_user.id, message1, reply_markup=kb_client_promo)


async def get_document(message: types.Message, state: FSMContext):
    if message.document.mime_type == 'application/pdf':
        async with state.proxy() as data:
            data['document'] = message

        for_letter = ''

        async with state.proxy() as data:
            for_letter = data['text']
        # Download the PDF file
        file_id = message.document.file_id
        file = await bot.get_file(file_id)
        file_path = file.file_path
        downloaded_file = await bot.download_file_by_id(file_id, file_path)
        print(downloaded_file.name)
        letter_full_name = await BotUsersTable.get_user_full_name(message.from_user.id)
        letter_email = await BotUsersTable.get_user_email(message.from_user.id)
        letter_subject = '–ê–Ω–∫–µ—Ç–∞ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–µ "–ü—Ä–∏–≤–µ–¥–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞"'
        letter_text = "–ê–Ω–∫–µ—Ç–∞ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–µ '–ü—Ä–∏–≤–µ–¥–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞'\r\n\n" \
                      f"–§–ò–û –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è: {letter_full_name}\n\n" \
                      f"–ü–æ—á—Ç–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏: {letter_email}\n\n" \
                      f"C–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–∏—Å—å–º–æ: {for_letter}"

        await send_letter_with_attachment(mail_recruiting, letter_email, letter_subject, letter_text,
                                          f"{downloaded_file.name}",
                                          f"–ü—Ä–∏–≤–µ–¥–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞. –†–µ–∑—é–º–µ –æ—Ç {letter_full_name}.pdf")
        await bot.send_message(message.from_user.id, "–ê–Ω–∫–µ—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –æ—Ç–¥–µ–ª —Ä–µ–∫—Ä—É—Ç–∏–Ω–≥–∞!", reply_markup=kb_client)
        await state.finish()
    else:
        await bot.send_message(message.from_user.id,
                               "–î–æ–∫—É–º–µ–Ω—Ç –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω, —è –ø—Ä–∏–Ω–∏–º–∞—é —Ç–æ–ª—å–∫–æ PDF!\n–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–Ω–æ–≤–∞, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–ü—Ä–æ–≥—Ä–∞–º–º–∞ –ü—Ä–∏–≤–µ–¥–∏ –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∞'",
                               reply_markup=kb_client)
        await state.finish()


def register_handlers_fsm_promo(dp: Dispatcher):
    dp.register_message_handler(promo_send_resume, Text(equals=btn_promo.text), state=None)
    dp.register_message_handler(cancel_get_document, Text(equals=btn_cancel.text), state="*")
    dp.register_message_handler(get_text, content_types=['text'], state=FSMPromo.text)
    dp.register_message_handler(get_document, content_types=['document'], state=FSMPromo.document)
    dp.register_message_handler(cancel_get_document, Text(equals=btn_cancel.text), state="*")
